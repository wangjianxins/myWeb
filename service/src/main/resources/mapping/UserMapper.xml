<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wangjianxin.service.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.wangjianxin.service.model.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="pass" property="pass" jdbcType="VARCHAR" />
    <result column="money" property="money" jdbcType="INTEGER" />
      <result column="photo" property="photo" jdbcType="VARCHAR" />

  </resultMap>
  <sql id="Base_Column_List" >
    id, email, name, pass, money,photo
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
    <select id="checkName" resultMap="BaseResultMap" parameterType="java.lang.String" >
        select
        id,email
        from user
        where name = #{name,jdbcType=VARCHAR}
    </select>
    <select id="getName" resultType="java.util.Map" parameterType="java.lang.Integer" >
        select
        id,name,money,email
        from user
        where id = #{user_id,jdbcType=INTEGER}
    </select>
    <select id="login" resultMap="BaseResultMap" parameterType="map" >
        select
        <include refid="Base_Column_List" />
        from user
        where email = #{email,jdbcType=VARCHAR}
        and pass = #{pass,jdbcType=VARCHAR}
    </select>
    <select id="check" resultMap="BaseResultMap" parameterType="java.lang.String" >
        select
        <include refid="Base_Column_List" />
        from user
        where email = #{email,jdbcType=VARCHAR}
    </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.wangjianxin.service.model.User" >
    insert into user (id, email, name,
      pass, money)
    values (#{id,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
      #{pass,jdbcType=VARCHAR}, #{money,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.wangjianxin.service.model.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="email != null" >
       email,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="pass != null" >
        pass,
      </if>
      <if test="money != null" >
        money,
      </if>
        <if test="photo != null" >
            photo,
        </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="pass != null" >
        #{pass,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        #{money,jdbcType=INTEGER},
      </if>
        <if test="photo != null" >
            #{photo,jdbcType=VARCHAR},
        </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wangjianxin.service.model.User" >
    update user
    <set >
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="pass != null" >
        pass = #{pass,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=INTEGER},
      </if>
        <if test="photo != null" >
            photo = #{photo,jdbcType=VARCHAR},
        </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wangjianxin.service.model.User" >
    update user
    set email = #{email,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      pass = #{pass,jdbcType=VARCHAR},
      money = #{money,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>